1. Creating a Table
    CREATE TABLE EMPLOYEES(EMPLOYEEID INT PRIMARY KEY,FIRSTNAME VARCHAR(50),LASTNAME VARCHAR(50),DATEOFBIRTH DATE, DEPARTMENT VARCHAR(20));
    CREATE TABLE ORDERNAMES(ORDERID INT PRIMARY KEY,ORDERDATE DATE,CUSTOMERID INT,AMOUNT DECIMAL(10,2));

2. Inserting Data into a Table
    INSERT INTO EMPLOYEES(EMPLOYEEID,FIRSTNAME,LASTNAME,DATEOFBIRTH,DEPARTMENT) VALUES(1,"CHAITHRA","AVETI","12-11-2005","CSE");
    INSERT INTO ORDERNAMES(ORDERID,ORDERDATE,CUSTOMERID,AMOUNT) VALUES(1,'12-11-2005',101,200.34);

3. Selecting Data from a Table
Select all columns:
    SELECT * FROM EMPLOYEES
    SELECT * FROM ORDERNAMES;
Select specific columns:
    SELECT FIRSTNAME,LASTNAME FROM EMPLOYEES
    SELECT ORDERID,AMOUNT FROM ORDERNAMES

4. Updating Data in a Table
    UPDATE EMPLOYEES SET DEPARTMENT='FINANACE' WHERE EMPLOYEEID=1;
    UPDATE ORDERNAMES SET AMOUNT=500 WHERE ORDERID=1; 

5. Deleting Data from a Table
    DELETE FROM EMPLOYEES WHERE EMPLOYEEID=1;
    DELETE FROM ORDERNAMES WHERE AMOUNT<100;

6. Filtering Data with WHERE Clause
    SELECT * FROM EMPLOYEES WHERE Department = 'HR';
    DELETE FROM ORDERNAMES WHERE AMOUNT>300;

7. Using AND / OR in Queries
Using AND:
    SELECT * FROM EMPLOYEES WHERE DEPARTMENT='HR' AND DATEOFBIRTH>'1990-01-01';
    SELECT * FROM ORDERNAMES WHERE AMOUNT>300 AND ORDERDATE<'2023-01-01';

Using OR:
    SELECT * FROM EMPLOYEES WHERE DEPARTMENT='HR' OR DEPARTMENT='FINANCE';
    SELECT * FROM ORDERNAMES WHERE AMOUNT<100 OR ORDERDATE>'2023-01-01';

8. Sorting Results with ORDER BY
    SELECT * FROM EMPLOYEES ORDER BY LASTNAME ASC;
    SELECT * FROM ORDERNAMES ORDER BY AMOUNT DESC;

9. Using Aggregate Functions
Counting rows:
    SELECT COUNT(*) FROM EMPLOYEES;
    SELECT COUNT(*) FROM ORDERNAMES;
Finding the average age:
    SELECT AVG(AMOUNT) FROM ORDERNAMES;
    2.ALTER TABLE EMPLOYEES ADD AGE VARCHAR(10)
    UPDATE EMPLOYEES SET AGE=20 WHERE EMPLOYEEID=1;
    UPDATE EMPLOYEES SET AGE=24 WHERE EMPLOYEEID=2;
    SELECT AVG(AGE) FROM EMPLOYEES;

10. Grouping Data with GROUP BY
SELECT DEPARTMENT, COUNT(*) FROM EMPLOYEES GROUP BY DEPARTMENT;
SELECT CUSTOMERID, SUM(AMOUNT) FROM ORDERNAMES GROUP BY CUSTOMERID;

11. Using HAVING Clause
    SELECT DEPARTMENT, COUNT(*) FROM EMPLOYEES GROUP BY DEPARTMENT HAVING COUNT(*)>5
    SELECT CUSTOMERID, SUM(AMOUNT) FROM ORDERNAMES GROUP BY CUSTOMERID HAVING SUM(AMOUNT)>5

12. Joining Tables
Inner Join:
    SELECT EMPLOYEES.FIRSTNAME,EMPLOYEES.LASTNAME,ORDERNAMES.AMOUNT FROM EMPLOYEES
        JOIN ORDERNAMES ON EMPLOYEES.EMPLOYEEID=ORDERNAMES.ORDERID
Left Join:
    SELECT EMPLOYEES.FIRSTNAME,EMPLOYEES.LASTNAME,ORDERNAMES.AMOUNT FROM EMPLOYEES 
        LEFT JOIN ORDERNAMES ON EMPLOYEES.EMPLOYEEID=ORDERNAMES.CUSTOMERID



************************************************project**********************************************************
CREATE PATIENT TABLE:
    CREATE TABLE PATIENT (PATIENTID INT PRIMARY KEY,FIRSTNAME VARCHAR(40),LASTNAME VARCHAR(40),DATEOFBIRTH DATE,GENDER VARCHAR(10),CONTACTINFO VARCHAR(100),ADDRESS VARCHAR(50))

CREATE DOCTOR TABLE:
    CREATE TABLE DOCTOR (DOCTORID INT PRIMARY KEY,FIRSTNAME VARCHAR(40),LASTNAME VARCHAR(40),SPECATILTY VARCHAR(100),AVALIBILITY VARCHAR(50),CONTACTINFO VARCHAR(100))

CREATE APPOINTMENT TABLE:
    CREATE TABLE APPOINTMENT(APPOINTMENTID INT PRIMARY KEY,PATIENTID INT,DOCTORID INT, APPOINTMENTDATE DATE,STATUS VARCHAR(20),
        FOREIGN KEY (PATIENTID) REFERENCES PATIENT(PATIENTID),
        FOREIGN KEY (DOCTORID) REFERENCES DOCTOR(DOCTORID)
        ); 

CREATE PRESCRIPTION TABLE:
    CREATE TABLE PRESCRIPTION(PRESCRIPTIONID INT PRIMARY KEY,PATIENTID INT,DOCTORID INT,  DATEPRESCRIBED DATE,MEDICATION VARCHAR(20),DOSAGE VARCHAR(20),
        FOREIGN KEY (PATIENTID) REFERENCES PATIENTS(PATIENTID),
        FOREIGN KEY (DOCTORID) REFERENCES DOCTORS(DOCTORID)
        );

INSERT INTO PATIENT(PATIENTID,FIRSTNAME,LASTNAME,DATEOFBIRTH,GENDER,CONTACTINFO,ADDRESS) VALUES(1,'DEVI','AKULA','01-01-2010','FEMALE','555-1234','123 Main St')
INSERT INTO DOCTOR(DOCTORID,FIRSTNAME,LASTNAME,SPECATILTY,AVALIBILITY,CONTACTINFO) VALUES(1,'ARUNA','EDHOKATI','Cardiology','Monday, Wednesday, Friday','512-1894')
INSERT INTO APPOINTMENT(APPOINTMENTID,PATIENTID,DOCTORID,APPOINTMENTDATE,STATUS) VALUES(1,1,1,'2024-10-01','Scheduled')

SELECT * FROM APPOINTMENT WHERE DOCTORID=1 AND APPOINTMENTDATE='2024-10-01'
UPDATE APPOINTMENT SET STATUS='COMPLETED' WHERE APPOINTMENTID=1
ALTER TABLE PATIENT ADD DISCHARGE VARCHAR(30)
UPDATE PATIENT SET DISCHARGE='NULL'
DELETE FROM PATIENT WHERE DISCHARGE<DATE('now', '-5 years');


SELECT a.* FROM APPOINTMENT a
JOIN PATIENT p ON a.PATIENTID = p.PATIENTID
WHERE p.FIRSTNAME = 'DEVI' OR a.APPOINTMENTDATE = '2024-10-01';

SELECT * FROM DOCTOR
WHERE SPECATILTY = 'Cardiology' AND  AVALIBILITY ='%Monday%';

 By Last Name
SELECT * FROM PATIENT
ORDER BY LASTNAME ASC;

 By Appointment Date
SELECT p.* FROM PATIENT p
JOIN APPOINTMENT a ON p.PATIENTID = a.PATIENTID
ORDER BY a.APPOINTMENTDATE ASC;

SELECT d.DOCTORID, d.FIRSTNAME, d.LASTNAME, COUNT(a.PATIENTID)
FROM DOCTOR d
JOIN APPOINTMENT a ON d.DOCTORID = a.DOCTORID
GROUP BY d.DOCTORID, d.FIRSTNAME, d.LASTNAME;

SELECT p.PATIENTID, COUNT(pr.PRESCRIPTIONID) 
FROM PATIENT p
JOIN PRESCRIPTION pr ON p.PATIENTID = pr.PATIENTID
GROUP BY p.PATIENTID;

